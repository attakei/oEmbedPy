name: Continuous Integration

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'
  pull_request:
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: astral-sh/setup-uv@v2
      - name: Lint by pre-commit
        run: |
          uv sync --frozen --all-extras
          uvx pre-commit run --all-files
  test-workspace:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
        frozen: [true, false]
    steps:
      - uses: actions/checkout@v3
      - uses: astral-sh/setup-uv@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        id: 'setup-python'
        with:
          architecture: x64
          python-version: ${{ matrix.python-version }}
      - name: 'Configure env as current workspace'
        run: |
          uv sync --frozen --python='${{ steps.setup-python.outputs.python-path }}'
        if: ${{ matrix.frozen }}
      - name: 'Configure env as updated workspace'
        run: |
          uv sync -U --python='${{ steps.setup-python.outputs.python-path }}'
        if: ${{ ! matrix.frozen }}
      - name: Run tests
        run: |
          uv run pytest
          uv run pytest -m webtest
  buildtest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: astral-sh/setup-uv@v2
      - name: Build
        run: |
          uv build
          ls -l dist
  doctest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: astral-sh/setup-uv@v2
      - name: Run tests
        run: |
          uv sync --frozen
          uv run make -C docs apidoc linkcheck dirhtml
